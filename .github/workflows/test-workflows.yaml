# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: workflows

on:
  push:
    branches:
      - main
    paths:
      - .github/**
      - custard/**
      - "**/*.yaml"
      - "**/*.yml"
  pull_request:
    paths:
      - .github/**
      - custard/**
      - "**/*.yaml"
      - "**/*.yml"

jobs:
  github-context:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      # For debugging information.
      - run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

  affected:
    uses: ./.github/workflows/affected.yaml
    permissions:
      statuses: write
    with:
      head-sha: ${{ github.event.pull_request.head.sha || github.sha }}
      config-file: .github/test/config.jsonc
      paths: .github/test/pkg1
      timeout-minutes: 1

  update-check:
    needs: affected
    runs-on: ubuntu-latest
    timeout-minutes: 1
    permissions:
      statuses: write
    steps:
      - uses: GoogleCloudPlatform/cloud-samples-tools/actions/steps/update-check@reusable-workflows
        with:
          check: ${{ needs.affected.outputs.check }}
          status: success

  setup-custard:
    needs: affected
    runs-on: ubuntu-latest
    timeout-minutes: 1
    strategy:
      fail-fast: false
      matrix:
        path: ${{ fromJson(needs.affected.outputs.paths) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup Custard
        uses: ./actions/steps/setup-custard
        with:
          path: ${{ matrix.path }}
          ci-setup: ${{ toJson(fromJson(needs.affected.outputs.ci-setups)[matrix.path]) }}
          project-id: my-project
      - run: bash run.sh
        working-directory: ${{ matrix.path }}

  map-run:
    needs: affected
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Run command on affected paths
        uses: ./actions/steps/map-run
        with:
          command: ls -lh
          paths: ${{ needs.affected.outputs.paths }}
          outputs-always: true
