# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Create status
description: Creates a check on a commit.

inputs:
  commit-sha:
    description: The commit SHA to create the check for.
    required: true
  name:
    description: The name of the check.
    required: true
  status:
    description: The status of the check, one of "error", "failure", "pending", "success".
    default: pending
  title:
    description: The title of the check, this appears in the "progress" of the check UI.
  details-url:
    description: The URL to the details of the check.
  repository-owner:
    description: The owner of the repository.
    default: ${{ github.repository_owner }}
  repository-name:
    description: The name of the repository.
    default: ${{ github.event.repository.name }}

runs:
  using: composite
  steps:
    - uses: actions/github-script@v7
      id: check
      with:
        script: |
          async function* listStatuses({owner, repo, sha}) {
            let page = 1;
            let statuses = [];
            console.log(`Listing statuses for ${sha}`);
            do {
              // https://docs.github.com/en/rest/commits/statuses?apiVersion=2022-11-28#create-a-commit-status
              // https://octokit.github.io/rest.js/v18/#repos-list-commit-statuses-for-ref
              const response = await github.rest.repos.listCommitStatusesForRef({
                owner: owner,
                repo: repo,
                ref: sha,
                page: page++,
              });
              statuses = response.data;
              for (const status of statuses) {
                console.log(`- [${status.state}] ${status.context} -- ${status.description}`);
                yield status;
              }
            } while (statuses.length > 0 && page < 100);
          }

          async function findStatus({owner, repo, sha, name}) {
            const statuses = listStatuses({owner: owner, repo: repo, sha: sha});
            for await (const status of statuses) {
              if (status.context === name) {
                console.log(`Found status: [${status.state}] ${status.context} -- ${status.description}`);
                return status;
              }
            }
            return null;
          }

          // If set to a terminal state, append the elapsed time.
          let title = `${{ inputs.title }}` || "${{ inputs.status }}";
          if (["success", "failure", "error"].includes("${{ inputs.status }}")) {
            const status = await findStatus({
              owner: "${{ inputs.repository-owner }}",
              repo: "${{ inputs.repository-name }}",
              sha: "${{ inputs.commit-sha }}",
              name: "${{ inputs.name }}",
            });
            if (status) {
              const start = Date.parse(status.updated_at);
              const elapsed = Date.now() - start;
              title = `${title} in ${elapsed}s`;
            }
          }

          // https://docs.github.com/en/rest/commits/statuses?apiVersion=2022-11-28#create-a-commit-status
          // https://octokit.github.io/rest.js/v18/#repos-create-commit-status
          // https://stackoverflow.com/a/72312617
          console.log(`Create status: [${inputs.status}] ${inputs.name} -- ${title}`);
          github.rest.repos.createCommitStatus({
            owner: "${{ inputs.repository-owner }}",
            repo: "${{ inputs.repository-name }}",
            sha: "${{ inputs.commit-sha }}",
            state: "${{ inputs.status }}",
            context: `${{ inputs.name }}`,
            description: title,
            target_url: `${{ inputs.details-url }}` || undefined,
          });
